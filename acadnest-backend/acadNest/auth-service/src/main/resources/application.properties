spring.application.name=auth-service
spring.datasource.url=jdbc:postgresql://localhost:5432/auth_service
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:/db.changelog/db.changelog.xml
server.host=0.0.0.0
server.port=8081


spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8081/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=Google

# Optional: You can define the OAuth2 provider's login URL if needed
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs


logging.file.name=./logs/auth-service.log
logging.level.root=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR
logging.level.com.project.acadNest=DEBUG
logging.level.jdk.event.security=OFF

logging.pattern.console=

